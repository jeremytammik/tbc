<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link rel="stylesheet" type="text/css" href="bc.css">
<script src="https://cdn.rawgit.com/google/code-prettify/master/loader/run_prettify.js" type="text/javascript"></script>
</head>

<!---

- https://github.com/jeremytammik/RevitLookup/pull/91
  https://github.com/jeremytammik/RevitLookup/releases/tag/2022.0.0.16
  integrated pull request #91 by @mphelt to add PartUtilsStream
  https://github.com/mphelt
  Adds PartUtilsStream that populates highlighted entries:
  a/img/revitlookup_PartUtilsStream.png
  Duplicated OriginalCategoryId shows value as f.e. OST_Walls instead of < null >.
  Duplicated GetSourceElementIds shows a 'flattened' list of elements instead of original list of LinkElementIds.
  Duplicated GetSourceElementOriginalCategoryIds uses EnumerableAsString to show value as f.e. 'OST_Walls, OST_Walls'.

- C# templates for Revit
  Роман Карпович <nice3point@gmail.com>
  Hi Jeremy, I made some really cool templates for creating revit plugins. With a build system, creating installers and bundles for the Autodesk Store. Ready-made files for AzureDevOps, GitHubActions have been written. A minimum of steps for starting and routine work, all GUIDs are generated by themselves when creating a project. Added the ability to merge several DLLs into one, just specify the names of the merged files. For Debug configurations, all files are copied to the addons folder by themselves. It is also possible to add unique configurations, for example, a configuration for AdskStore, where you can check whether a plugin is purchased or not, in the second case, display an informational message and redirect to a page in the store. You can test them here https://github.com/Nice3point/RevitTemplates and share them on your blog. Video with an example in the attached files.
  FirstSteps.mp4 -- https://drive.google.com/file/d/1Pm0tygJNRcXP_8O8XCsk2C5Jt3FQFCym/view
  StoreVersion.mp4 -- https://drive.google.com/file/d/1bPveyMoGi0U9MVTT0UxWVPK7gXb2amJu/view
  https://github.com/Nice3point/RevitTemplates

- C# and IronPython Hosting for Revit addins
  https://forums.autodesk.com/t5/revit-api-forum/c-and-ironpython-hosting-for-revit-addins/m-p/10629723
  
- CPython and Python 3
  PyRevit and Revit 2022 w/ Dynamo
  https://forums.autodesk.com/t5/revit-api-forum/pyrevit-and-revit-2022-w-dynamo/m-p/10638367

twitter:

add #thebuildingcoder

 the #RevitAPI #DynamoBim @AutodeskForge @AutodeskRevit #bim #ForgeDevCon 

&ndash; 
...

linkedin:

#bim #DynamoBim #ForgeDevCon #Revit #API #IFC #SDK #AI #VisualStudio #Autodesk #AEC #adsk

the [Revit API discussion forum](http://forums.autodesk.com/t5/revit-api-forum/bd-p/160) thread

<center>
<img src="img/" alt="" title="" width="600"/>
<p style="font-size: 80%; font-style:italic"></p>
</center>

**Question:** 

**Answer:**

**Response:**  

Many thanks to  for this very helpful explanation!

<pre class="code">
</pre>

-->

### Snooping Parts, Python Topics and C&#35; Templates




####<a name="2"></a> RevitLokup Handles PartUtilsStream

https://github.com/jeremytammik/RevitLookup/pull/91
https://github.com/jeremytammik/RevitLookup/releases/tag/2022.0.0.16
integrated pull request #91 by @mphelt to add PartUtilsStream
https://github.com/mphelt
Adds PartUtilsStream that populates highlighted entries:
a/img/revitlookup_PartUtilsStream.png
Duplicated OriginalCategoryId shows value as f.e. OST_Walls instead of < null >.
Duplicated GetSourceElementIds shows a 'flattened' list of elements instead of original list of LinkElementIds.
Duplicated GetSourceElementOriginalCategoryIds uses EnumerableAsString to show value as f.e. 'OST_Walls, OST_Walls'.

####<a name="3"></a> Revit Add-In C&#35; Template 

C# templates for Revit
Роман Карпович <nice3point@gmail.com>
Hi Jeremy, I made some really cool templates for creating revit plugins. With a build system, creating installers and bundles for the Autodesk Store. Ready-made files for AzureDevOps, GitHubActions have been written. A minimum of steps for starting and routine work, all GUIDs are generated by themselves when creating a project. Added the ability to merge several DLLs into one, just specify the names of the merged files. For Debug configurations, all files are copied to the addons folder by themselves. It is also possible to add unique configurations, for example, a configuration for AdskStore, where you can check whether a plugin is purchased or not, in the second case, display an informational message and redirect to a page in the store. You can test them here https://github.com/Nice3point/RevitTemplates and share them on your blog. Video with an example in the attached files.
FirstSteps.mp4 -- https://drive.google.com/file/d/1Pm0tygJNRcXP_8O8XCsk2C5Jt3FQFCym/view
StoreVersion.mp4 -- https://drive.google.com/file/d/1bPveyMoGi0U9MVTT0UxWVPK7gXb2amJu/view
https://github.com/Nice3point/RevitTemplates

####<a name="4"></a> IronPython Hosting in C&#35; Add-In

C# and IronPython Hosting for Revit addins
https://forums.autodesk.com/t5/revit-api-forum/c-and-ironpython-hosting-for-revit-addins/m-p/10629723

####<a name="5"></a> Python 3, CPython, pyRevit and Dynamo

CPython and Python 3
PyRevit and Revit 2022 w/ Dynamo
https://forums.autodesk.com/t5/revit-api-forum/pyrevit-and-revit-2022-w-dynamo/m-p/10638367



<pre class="code">

</pre>



**Answer:** 

<center>
<img src="img/" alt="" title="" width="100"/> <!-- 630 -->
</center>

